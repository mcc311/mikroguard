version: '3.8'

services:
  mikroguard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mikroguard
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # LDAP Configuration
      - LDAP_URL=${LDAP_URL}
      - LDAP_BIND_DN=${LDAP_BIND_DN}
      - LDAP_BIND_PASSWORD=${LDAP_BIND_PASSWORD}
      - LDAP_SEARCH_BASE=${LDAP_SEARCH_BASE}
      - LDAP_ADMIN_GROUP=${LDAP_ADMIN_GROUP}

      # NextAuth Configuration
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}

      # WireGuard Configuration
      - WG_INTERFACE_NAME=${WG_INTERFACE_NAME:-wireguard1}
      - WG_SUBNET=${WG_SUBNET:-10.10.10.0/24}
      - WG_DNS=${WG_DNS:-1.1.1.1}
      - WG_DEFAULT_ALLOWED_IPS=${WG_DEFAULT_ALLOWED_IPS}
      - WG_ENDPOINT=${WG_ENDPOINT}
      - WG_PERSISTENT_KEEPALIVE=${WG_PERSISTENT_KEEPALIVE:-25}
      - WG_EXPIRATION_DAYS=${WG_EXPIRATION_DAYS:-90}

      # RouterOS Configuration
      - ROUTEROS_HOST=${ROUTEROS_HOST}
      - ROUTEROS_PORT=${ROUTEROS_PORT:-8080}
      - ROUTEROS_USERNAME=${ROUTEROS_USERNAME}
      - ROUTEROS_PASSWORD=${ROUTEROS_PASSWORD}
      - ROUTEROS_USE_TLS=${ROUTEROS_USE_TLS:-false}

      # Cron Configuration
      - CRON_SECRET=${CRON_SECRET}

      # App Configuration
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME:-MikroGuard}
      - NODE_ENV=production

    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

    # Optional: Set resource limits
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1'
    #       memory: 512M
    #     reservations:
    #       cpus: '0.5'
    #       memory: 256M

    # Optional: Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
